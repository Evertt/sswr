"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _swrev = require('swrev');var _store = require('svelte/store');var c=class extends _swrev.DefaultCache{constructor(){super();if(typeof window!="undefined")for(let t=0;t<localStorage.length;t++){let s=window.sessionStorage.key(t),e=s.replace(/^sswr-/,"");if(s===e)continue;let n=window.sessionStorage.getItem(s),i=JSON.parse(n);this.elements.set(e,new (0, _swrev.CacheItem)({data:i.data,expiresAt:i.expiresAt?new Date(i.expiresAt):null}))}}resolve(t,s){Promise.resolve(s.data).then(e=>{if(e==null)return this.remove(t);s.data=e,typeof window!="undefined"&&window.sessionStorage.setItem(`sswr-${t}`,JSON.stringify(s)),this.broadcast(t,e)})}};var d=class extends _swrev.SWR{useSvelte(t,s){let e=()=>{},n=_store.writable.call(void 0, this.get(this.resolveKey(t)),()=>()=>e()),i=_store.writable.call(void 0, void 0,()=>()=>e()),D=r=>n.set(r),f=r=>i.set(r);return e=this.use(t,D,f,s).unsubscribe,n.then=r=>new Promise(l=>{let S,u=()=>{};u=n.subscribe(a=>{if(a!==void 0){u(),S=a;let h=_optionalChain([r, 'optionalCall', _ => _(a)]);l(h||a)}}),S&&u()}),{data:n,error:i,mutate:(r,l)=>this.mutate(this.resolveKey(t),r,l),revalidate:r=>this.revalidate(this.resolveKey(t),r),clear:r=>this.clear(this.resolveKey(t),r),unsubscribe:e,then:r=>{n.then(r).then(()=>e())}}}},w= exports.createSWR =(o={})=>{let t=new d({cache:new c,...o});return{useSWR:(s,e)=>t.useSvelte(s,e),mutate:(s,e,n)=>t.mutate(s,e,n),revalidate:(s,e)=>t.revalidate(s,e),clear:(s,e)=>t.clear(s,e)}};exports.SSWR = d; exports.createSWR = w;
