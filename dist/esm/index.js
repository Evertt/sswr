import{SWR as R}from"swrev";import{writable as c}from"svelte/store";import{CacheItem as S,DefaultCache as h}from"swrev";var o=class extends h{constructor(){super();if(typeof window!="undefined")for(let t=0;t<localStorage.length;t++){let s=window.sessionStorage.key(t),e=s.replace(/^sswr-/,"");if(s===e)continue;let a=window.sessionStorage.getItem(s),n=JSON.parse(a);this.elements.set(e,new S({data:n.data,expiresAt:n.expiresAt?new Date(n.expiresAt):null}))}}resolve(t,s){Promise.resolve(s.data).then(e=>{if(e==null)return this.remove(t);s.data=e,typeof window!="undefined"&&window.sessionStorage.setItem(`sswr-${t}`,JSON.stringify(s)),this.broadcast(t,e)})}};var l=class extends R{useSvelte(t,s){let e=()=>{},a=c(this.get(this.resolveKey(t)),()=>()=>e()),n=c(void 0,()=>()=>e()),d=r=>a.set(r),u=r=>n.set(r);return e=this.use(t,d,u,{loadInitialCache:!1,...s}).unsubscribe,{data:a,error:n,mutate:(r,p)=>this.mutate(this.resolveKey(t),r,p),revalidate:r=>this.revalidate(this.resolveKey(t),r),clear:r=>this.clear(this.resolveKey(t),r),unsubscribe:e}}},m=(i={})=>{let t=new l({cache:new o,...i});return{useSWR:(s,e)=>t.useSvelte(s,e),mutate:(s,e,a)=>t.mutate(s,e,a),revalidate:(s,e)=>t.revalidate(s,e),clear:(s,e)=>t.clear(s,e)}};export{l as SSWR,m as createSWR};
