import{SWR as W}from"swrev";import{writable as p}from"svelte/store";import{CacheItem as m,DefaultCache as R}from"swrev";var c=class extends R{constructor(){super();if(typeof window!="undefined")for(let t=0;t<localStorage.length;t++){let s=window.sessionStorage.key(t),e=s.replace(/^sswr-/,"");if(s===e)continue;let n=window.sessionStorage.getItem(s),i=JSON.parse(n);this.elements.set(e,new m({data:i.data,expiresAt:i.expiresAt?new Date(i.expiresAt):null}))}}resolve(t,s){Promise.resolve(s.data).then(e=>{if(e==null)return this.remove(t);s.data=e,typeof window!="undefined"&&window.sessionStorage.setItem(`sswr-${t}`,JSON.stringify(s)),this.broadcast(t,e)})}};var d=class extends W{useSvelte(t,s){let e=()=>{},n=p(this.get(this.resolveKey(t)),()=>()=>e()),i=p(void 0,()=>()=>e()),D=r=>n.set(r),f=r=>i.set(r);return e=this.use(t,D,f,s).unsubscribe,n.then=r=>new Promise(l=>{let S,u=()=>{};u=n.subscribe(a=>{if(a!==void 0){u(),S=a;let h=r?.(a);l(h||a)}}),S&&u()}),{data:n,error:i,mutate:(r,l)=>this.mutate(this.resolveKey(t),r,l),revalidate:r=>this.revalidate(this.resolveKey(t),r),clear:r=>this.clear(this.resolveKey(t),r),unsubscribe:e,then:r=>{n.then(r).then(()=>e())}}}},w=(o={})=>{let t=new d({cache:new c,...o});return{useSWR:(s,e)=>t.useSvelte(s,e),mutate:(s,e,n)=>t.mutate(s,e,n),revalidate:(s,e)=>t.revalidate(s,e),clear:(s,e)=>t.clear(s,e)}};export{d as SSWR,w as createSWR};
