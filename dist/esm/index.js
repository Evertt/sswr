import{SWR as R}from"swrev";import{writable as d}from"svelte/store";import{CacheItem as f,DefaultCache as h}from"swrev";var c=class extends h{constructor(){super();if(typeof window!="undefined")for(let t=0;t<localStorage.length;t++){let s=window.sessionStorage.key(t),e=s.replace(/^sswr-/,"");if(s===e)continue;let n=window.sessionStorage.getItem(s),a=JSON.parse(n);this.elements.set(e,new f({data:a.data,expiresAt:a.expiresAt?new Date(a.expiresAt):null}))}}resolve(t,s){Promise.resolve(s.data).then(e=>{if(e==null)return this.remove(t);s.data=e,typeof window!="undefined"&&window.sessionStorage.setItem(`sswr-${t}`,JSON.stringify(s)),this.broadcast(t,e)})}};var u=class extends R{useSvelte(t,s){let e=()=>{},n=d(this.get(this.resolveKey(t)),()=>()=>e()),a=d(void 0,()=>()=>e());n.then=r=>new Promise(o=>{let m=n.subscribe(l=>{if(l!==void 0){m();let D=r?.(l);o(D||l)}})});let S=r=>n.set(r),p=r=>a.set(r);return e=this.use(t,S,p,s).unsubscribe,{data:n,error:a,mutate:(r,o)=>this.mutate(this.resolveKey(t),r,o),revalidate:r=>this.revalidate(this.resolveKey(t),r),clear:r=>this.clear(this.resolveKey(t),r),unsubscribe:e}}},W=(i={})=>{let t=new u({cache:new c,...i});return{useSWR:(s,e)=>t.useSvelte(s,e),mutate:(s,e,n)=>t.mutate(s,e,n),revalidate:(s,e)=>t.revalidate(s,e),clear:(s,e)=>t.clear(s,e)}};export{u as SSWR,W as createSWR};
